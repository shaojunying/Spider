# Spider Toolkit - 开发工具配置文件
# 此文件仅用于统一管理开发工具配置，不用于发布

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

# 基本项目信息（仅用于本地开发）
[project]
name = "spider-toolkit"
version = "1.0.0"
description = "多功能爬虫工具集"
requires-python = ">=3.8"

# 核心依赖（从 requirements.txt 迁移过来，便于管理）
dependencies = [
    "requests>=2.25.1",
    "urllib3>=1.26.0",
    "beautifulsoup4>=4.9.3",
    "lxml>=4.6.0",
    "selenium>=4.0.0",
    "pandas>=1.3.0",
    "numpy>=1.21.0",
    "python-dateutil>=2.8.0",
    "openpyxl>=3.0.0",
    "camelot-py[cv]>=0.10.0",
    "python-dotenv>=0.19.0",
    "Pillow>=8.0.0",
    "ipython>=7.0.0",
]

# 包发现配置（解决多顶级目录问题）
[tool.setuptools.packages.find]
include = ["core*", "scrapers*", "automation*", "campus*", "community*", "tools*"]

# 开发依赖（可选安装）
[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]

# ==================== 开发工具配置 ====================

# pytest 测试配置
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",                          # 显示测试摘要
    "--strict-markers",             # 严格标记模式
    "--strict-config",              # 严格配置模式
]
testpaths = ["tests"]               # 测试文件路径
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: 标记慢速测试",
    "integration: 标记集成测试",
    "unit: 标记单元测试",
]

# 代码覆盖率配置
[tool.coverage.run]
source = ["core", "scrapers", "automation", "campus"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
]

# Black 代码格式化配置
[tool.black]
line-length = 88                   # 行长度限制
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort 导入排序配置
[tool.isort]
profile = "black"                  # 与 black 兼容
multi_line_output = 3
line_length = 88
known_first_party = ["core", "scrapers", "automation", "campus", "community", "tools"]
known_third_party = ["requests", "beautifulsoup4", "selenium", "pandas", "numpy"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# MyPy 类型检查配置
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
disallow_any_generics = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
show_error_codes = true

# 忽略缺失类型提示的第三方库
[[tool.mypy.overrides]]
module = [
    "selenium.*",
    "camelot.*",
    "cv2.*",
    "requests.*",
]
ignore_missing_imports = true

# Bandit 安全检查配置
[tool.bandit]
exclude_dirs = ["tests", "venv", "env"]
skips = ["B101", "B601"]